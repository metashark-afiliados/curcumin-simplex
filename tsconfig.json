// frontend/tsconfig.json
/**
 * @file tsconfig.json
 * @description Manifiesto de Configuración y SSoT para el compilador de TypeScript.
 *              - v5.0.0: Adopta "moduleResolution": "bundler", la estrategia moderna
 *                para resolver errores de importación de módulos (TS2307, TS1259)
 *                de forma nativa y robusta.
 * @version 5.0.0
 * @author RaZ podesta - MetaShark Tech
 */
{
  "compilerOptions": {
    "strict": true,
    "noEmit": true,
    "isolatedModules": true,
    "target": "ES2020",
    "module": "esnext",
    // <<-- SOLUCIÓN CRÍTICA: "bundler" permite la resolución de módulos sin extensión,
    //      igual que como lo hace Next.js, resolviendo los errores de tipo en las
    //      dependencias de desarrollo como @typescript-eslint.
    "moduleResolution": "bundler",
    "esModuleInterop": true,
    "lib": ["dom", "dom.iterable", "esnext"],
    "jsx": "preserve",
    "allowJs": true,
    "resolveJsonModule": true,
    "skipLibCheck": true,
    "incremental": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"],
      "@config/*": ["./src/config/*"],
      "@components/*": ["./src/components/*"],
      "@hooks/*": ["./src/hooks/*"],
      "@lib/*": ["./src/lib/*"],
      "@scripts/*": ["./scripts/*"],
      "@tests/*": ["./tests/*"]
    },
    "plugins": [
      {
        "name": "next"
      }
    ],
    "types": ["vitest/globals"]
  },
  "include": [
    ".next/types/**/*.ts",
    "next-env.d.ts",
    "src/**/*.ts",
    "src/**/*.tsx",
    "tests/**/*.ts",
    "tests/**/*.tsx",
    "*.config.{js,mjs,ts}",
    "scripts/**/*.ts"
  ],
  "exclude": ["node_modules"]
}
// frontend/tsconfig.json
